version: '3.8'

services:
  loki:
    image: grafana/loki:2.3.0
    container_name: loki
    restart: unless-stopped
    hostname: loki
    volumes:
      - ./loki-config.yml:/etc/loki/local-config.yml
      - loki-data:/loki
    command: -config.file=/etc/loki/local-config.yml
    networks:
      logging-network:
        aliases:
          - loki
        ipv4_address: 172.23.0.200
    deploy:
      resources:
        limits:
          memory: 100M

  promtail:
    image: grafana/promtail:2.9.1
    container_name: promtail
    restart: unless-stopped
    volumes:
      - /opt/auto-deploy/logs:/var/log
      - ./promtail-config.yml:/etc/promtail/config.yml
    command: -config.file=/etc/promtail/config.yml
    depends_on:
      - loki
    networks:
      - logging-network 
    logging:
      driver: loki
      options:
        loki-url: "http://loki:3100/loki/api/v1/push"
        loki-external-labels: "service=promtail,type=service"
        loki-retries: "5"
        loki-batch-size: "400"
        mode: "non-blocking"
    deploy:
      resources:
        limits:
          memory: 50M
  
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--storage.tsdb.retention.time=5d"
      - "--storage.tsdb.min-block-duration=2h"
      - "--storage.tsdb.max-block-duration=2h"
    networks:
      - logging-network
    restart: unless-stopped
    privileged: true
    depends_on:
      - cadvisor
    deploy:
      resources:
        limits:
          memory: 150M 

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.49.1
    container_name: cadvisor
    restart: unless-stopped
    command:
      - "--housekeeping_interval=30s"
      - "--docker_only=true"
      - "--storage_duration=30s"
    networks:
      - logging-network
    privileged: true
    volumes:
      - "/:/rootfs:ro"
      - "/var/run:/var/run:ro"
      - "/sys:/sys:ro"
      - "/var/lib/docker/:/var/lib/docker:ro"
    devices:
      - "/dev/kmsg"
    deploy:
      resources:
        limits:
          memory: 100M 

  grafana:
    image: logs-web
    container_name: grafana
    pull_policy: never
    restart: unless-stopped
    volumes:
      - grafana-data:/var/lib/grafana
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.logs-web.entrypoints=http"
      - "traefik.http.routers.logs-web.rule=Host(`log.thiagosol.com`)"
      - "traefik.http.routers.logs-web-secure.entrypoints=https"
      - "traefik.http.routers.logs-web-secure.rule=Host(`log.thiagosol.com`)"
      - "traefik.http.routers.logs-web-secure.tls=true"
      - "traefik.http.routers.logs-web-secure.service=logs-web-secure"
      - "traefik.http.services.logs-web-secure.loadbalancer.server.port=3000"
      - "traefik.docker.network=external-sol-apis"
    depends_on:
      - loki
    networks:
      - logging-network
      - external-sol-apis
    logging:
      driver: loki
      options:
        loki-url: "http://loki:3100/loki/api/v1/push"
        loki-external-labels: "service=grafana,type=service"
        loki-retries: "5"
        loki-batch-size: "400"
        mode: "non-blocking"
    deploy:
      resources:
        limits:
          memory: 100M

volumes:
  grafana-data:
  prometheus-data:
  loki-data:

networks:
  logging-network:
    external: true
  external-sol-apis:
    external: true
